
# Supress Warnings
import warnings
warnings.filterwarnings('ignore')

# Import the numpy and pandas packages

import numpy as np
import pandas as pd

movies = pd.read_csv("/home/manaswi/Downloads/Movie+Assignment+Data.csv")# Write your code for importing the csv file here
movies
# Write your code for inspection here
movies.columns
movies.shape

# Write your code for column-wise null count here
movies.isnull().sum()
movies.isnull().sum(axis=1)
movper=1 - movies.count()/len(movies.index)
movper
movies.drop(['color'],axis=1,inplace=True)
movies.drop(['director_facebook_likes'],axis=1,inplace=True)
movies.drop(['actor_1_facebook_likes'],axis=1,inplace=True)
movies.drop(['actor_2_facebook_likes'],axis=1,inplace=True)
movies.drop(['actor_3_facebook_likes'],axis=1,inplace=True)
movies.drop(['actor_2_name'],axis=1,inplace=True)
movies.drop(['cast_total_facebook_likes'],axis=1,inplace=True)
movies.drop(['actor_3_name'],axis=1,inplace=True)
movies.drop(['duration'],axis=1,inplace=True)
movies.drop(['facenumber_in_poster'],axis=1,inplace=True)
movies.drop(['content_rating'],axis=1,inplace=True)
movies.drop(['country'],axis=1,inplace=True)
movies.drop(['movie_imdb_link'],axis=1,inplace=True)
movies.drop(['aspect_ratio'],axis=1,inplace=True)
movies.drop([actor_2_name'],axis=1,inplace=True)
movies.drop(['plot_keywords'],axis=1,inplace=True)

movies= movies[~np.isnan(movies['gross'])]
movies= movies[~np.isnan(movies['budget'])]

movies = movies[movies.isnull().sum(axis=1) <= 5]

movies["language"].fillna("English", inplace = True)


movper1=1 - movies.count()/len(movies.index)
movper1


movies['gross'] = movies['gross']/1000000
movies['budget'] = movies['budget']/1000000
movies['profit'] = movies['gross'] - movies['budget']
moviesmovies = movies[~movies.duplicated()]
movies.duplicated().any()


movies.head()



# Write your code for extracting the top 250 movies as per the IMDb score here. Make sure that you store it in a new dataframe 
# and name that dataframe as 'IMDb_Top_250'
IMDb_Top_250 = movies.sort_values(by = 'imdb_score', ascending = False)
IMDb_Top_250 = IMDb_Top_250.loc[IMDb_Top_250['num_voted_users'] > 25000]
IMDb_Top_250 = IMDb_Top_250.iloc[:250, ]
IMDb_Top_250['Rank'] = range(1,251)
IMDb_Top_250


Top_Foreign_Lang_Film = IMDb_Top_250[IMDb_Top_250['language'] != 'English']
Top_Foreign_Lang_Film# Write your code to extract top foreign language films from 'IMDb_Top_250' here


top10director = pd.DataFrame(movies.groupby('director_name').imdb_score.mean().sort_values(ascending = False).head(10))



movies['genre_1'] = movies['genres'].apply(lambda x: x.split('|')[0])
movies['genre_2'] = movies['genres'].apply(lambda x: x.split('|')[0] if len(x.split('|'))<2 else x.split('|')[1])
movies


movies_by_segment = movies.groupby(['genre_1','genre_2'])

PopGenre =  pd.DataFrame(movies_by_segment.gross.mean().sort_values(ascending = False).head(5))

combined = combined.groupby('actor_1_name')

combined['num_critic_for_reviews','num_user_for_reviews'].mean()
